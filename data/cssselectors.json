// Manually extracted from http://www.w3.org/TR/CSS2/selector.html
// Is there any way to avoid redundancy?
    cssSelectorsDetails = { 
"selectors":[{'Pattern':'*','name':'Universal selector','meaning':'Matches any element'},
	{'Pattern':'E','name':'Type selector','meaning':'Matches any E element (i.e., an element of type E)'},
	{'Pattern':'E F','name':'Descendant selector','meaning':'Matches any F element that is a descendant of an E element'},
	{'Pattern':'E > F','name':'Child selector','meaning':'Matches any F element that is a child of an E element'},
	{'Pattern':'E:first-child','name':'first-child pseudo-class','meaning':'Matches element E when E is the first child of its parent'},
	{'Pattern':'E:link','name':'link pseudo-class','meaning':'Matches element E if E is the source anchor of a hyperlink of which the target is not yet visited'},
	{'Pattern':'E:visited','name':'link pseudo-class','meaning':'Matches element E if E is the source anchor of a hyperlink of which the target is already visited'},
	{'Pattern':'E:active | E:hover | E:focus','name':'dynamic pseudo-class','meaning':'Matches E during certain user actions'},
	{'Pattern':'E:lang(c)','name':'lang() pseudo-class','meaning':'Matches element of type E if it is in (human) language c'},
	{'Pattern':'E + F','name':'Adjacent selector','meaning':'Matches any F element immediately preceded by a sibling element E'},
	{'Pattern':'E[foo]','name':'Attribute selector','meaning':'Matches any E element with the "foo" attribute set (whatever the value)'},
	{'Pattern':'E[foo="warning"]','name':'Attribute selector','meaning':'Matches any E element whose "foo" attribute value is exactly equal to "warning"'},
	{'Pattern':'E[foo~="warning"]','name':'Attribute selector','meaning':'Matches any E element whose "foo" attribute value is a list of space-separated values, one of which is exactly equal to "warning"'},
	{'Pattern':'E[lang|=en]','name':'Attribute selector','meaning':'Matches any E element whose "lang" attribute has a hyphen-separated list of values beginning (from the left) with "en"'},
	{'Pattern':'.warning','name':'Class selector','meaning':'In HTML, matches any element whose class attribute is a list of space-separated values, one of which is exactly equal to "warning"'},
	{'Pattern':'#myid','name':'ID selector','meaning':'Matches any element with ID equal to "myid".'}],
'*':[{"name":"Universal selector","description":"matches the name of any element type"}],
'lang()':[{"Pattern":"E:lang(c)","name":"lang() pseudo-class","description":"Matches element E if it is in (human) language c (the document language specifies how language is determined)"}],
"first-child":[{'Pattern':'E:first-child','name':'first-child pseudo-class','meaning':'Matches element E when E is the first child of its parent'}],
"link":[	{'Pattern':'E:link','name':'link pseudo-class','meaning':'Matches element E if E is the source anchor of a hyperlink of which the target is not yet visited'}],
"visited":[	{'Pattern':'E:visited','name':'link pseudo-class','meaning':'Matches element E if E is the source anchor of a hyperlink of which the target is already visited'}],
"active":[	{'Pattern':'E:active','name':'dynamic pseudo-class','meaning':'Matches E when E is activated by the user'}],
"hover":[	{'Pattern':'E:hover','name':'dynamic pseudo-class','meaning':'Matches E while the user designates an element (with some pointing device), but does not activate it'}],
"focus":[	{'Pattern':'E:focus','name':'dynamic pseudo-class','meaning':'Matches E while while it has the focus'}],
':lang()':[{"Pattern":"E:lang(c)","name":"lang() pseudo-class","description":"Matches element E if it is in (human) language c (the document language specifies how language is determined)"}],
":first-child":[{'Pattern':'e:first-child','name':'first-child pseudo-class','meaning':'Matches element E when E is the first child of its parent'}],
":link":[	{'Pattern':'E:link','name':'link pseudo-class','meaning':'Matches element E if E is the source anchor of a hyperlink of which the target is not yet visited'}],
":visited":[	{'Pattern':'E:visited','name':'link pseudo-class','meaning':'Matches element E if E is the source anchor of a hyperlink of which the target is already visited'}],
":active":[	{'Pattern':'E:active','name':'dynamic pseudo-class','meaning':'Matches E when E is activated by the user'}],
":hover":[	{'Pattern':'E:hover','name':'dynamic pseudo-class','meaning':'Matches E while the user designates an element (with some pointing device), but does not activate it'}],
":focus":[	{'Pattern':'E:focus','name':'dynamic pseudo-class','meaning':'Matches E while while it has the focus'}],

}
	

    cssAtrulesDetails = { 
"at-rules":[{"name":"@media","description":"An @media rule specifies the target media types (separated by commas) of a set of statements (delimited by curly braces)","Recognized media types":"all, braille, embossed, handheld, print, projection, screen, speech, tty, tv"},
	{"name":"@import","description":"The '@import' rule allows to import style rules from other style sheets. Any @import rules must precede all other rules (except @charset)", "Syntax":"The '@import' keyword must be followed by the URI of the style sheet to include. A string is also allowed; it will be interpreted as if it had url(...) around it. Media-dependent import can be specified with comma-separated media types after the URI.","Example":"@import url('mystyle.css') screen"},
	{"name":"@page","description":"An @page rule consists of the keyword '@page', followed by an optional page selector, followed by a block of declarations. The declarations in an @page rule are said to be in the page context and are useful to write CSS rules for paged media (e.g. for printing on paper).","Example":"@page {margin: 3cm;}"},
	{"name":"@charset","description":"The @charset rule defines the encoding used in a linked style sheet. An @charset rule must be placed at the very beginning of the style sheet, preceded by no characters, and the name of the encoding should follow in quotes.","Example":'@charset "ISO-8859-1"'}],
"@import":[{"name":"@import","description":"The '@import' rule allows to import style rules from other style sheets. Any @import rules must precede all other rules (except @charset)", "Syntax":"The '@import' keyword must be followed by the URI of the style sheet to include. A string is also allowed; it will be interpreted as if it had url(...) around it. Media-dependent import can be specified with comma-separated media types after the URI.","Example":"@import url('mystyle.css') screen"}],
"import":[{"name":"@import","description":"The '@import' rule allows to import style rules from other style sheets. Any @import rules must precede all other rules (except @charset)", "Syntax":"The '@import' keyword must be followed by the URI of the style sheet to include. A string is also allowed; it will be interpreted as if it had url(...) around it. Media-dependent import can be specified with comma-separated media types after the URI.","Example":"@import url('mystyle.css') screen"}],
"@page":[{"name":"@page","description":"An @page rule consists of the keyword '@page', followed by an optional page selector, followed by a block of declarations. The declarations in an @page rule are said to be in the page context and are useful to write CSS rules for paged media (e.g. for printing on paper).","Example":"@page {margin: 3cm;}"}],
"page":[{"name":"@page","description":"An @page rule consists of the keyword '@page', followed by an optional page selector, followed by a block of declarations. The declarations in an @page rule are said to be in the page context and are useful to write CSS rules for paged media (e.g. for printing on paper).","Example":"@page {margin: 3cm;}"}],
"@media":[{"name":"@media","description":"An @media rule specifies the target media types (separated by commas) of a set of statements (delimited by curly braces)","Recognized media types":"all, braille, embossed, handheld, print, projection, screen, speech, tty, tv"}],
"media":[{"name":"@media","description":"An @media rule specifies the target media types (separated by commas) of a set of statements (delimited by curly braces)","Recognized media types":"all, braille, embossed, handheld, print, projection, screen, speech, tty, tv"}],
"@charset":[{"name":"@charset","description":"The @charset rule defines the encoding used in a linked style sheet. An @charset rule must be placed at the very beginning of the style sheet, preceded by no characters, and the name of the encoding should follow in quotes.","Example":'@charset "ISO-8859-1"'}],
"charset":[{"name":"@charset","description":"The @charset rule defines the encoding used in a linked style sheet. An @charset rule must be placed at the very beginning of the style sheet, preceded by no characters, and the name of the encoding should follow in quotes.","Example":'@charset "ISO-8859-1"'}]
}